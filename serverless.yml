service: serverless-kanban

provider:
  name: aws
  region: us-east-1
  stage: dev
  memorySize: 256
  runtime: nodejs12.x
  role: LambdaRole
  environment:
    POSTGRESQL_HOST: ${self:custom.POSTGRESQL.HOST}
    POSTGRESQL_PORT: ${self:custom.POSTGRESQL.PORT}
  custom:
    DB_NAME: kanban
    USERNAME: admin
    PASSWORD: password
    POSTGRESQL:
      VPC_CIDR: 10
      HOST:
        Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Address]
      PORT:
        Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Port]
plugins:
  - serverless-pseudo-parameters

resources:
  Resources:
    LambdaRole: ${file(./resource/LambdaRole.yml)}
    PostgreSqlRDSInstance: ${file(./resource/PostgreSqlRDSInstance.yml)}
    RoutePublic: ${file(./resource/RoutePublic.yml)}
    RouteTableAssociationSubnetA: ${file(./resource/RouteTableAssociationSubnetA.yml)}
    RouteTableAssociationSubnetB: ${file(./resource/RouteTableAssociationSubnetB.yml)}
    RouteTableAssociationSubnetC: ${file(./resource/RouteTableAssociationSubnetC.yml)}
    RouteTablePublic: ${file(./resource/RouteTablePublic.yml)}
    ServerlessInternetGateway: ${file(./resource/ServerlessInternetGateway.yml)}
    ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}
    ServerlessSubnetA: ${file(./resource/ServerlessSubnetA.yml)}
    ServerlessSubnetB: ${file(./resource/ServerlessSubnetB.yml)}
    ServerlessSubnetC: ${file(./resource/ServerlessSubnetC.yml)}
    ServerlessSubnetGroup: ${file(./resource/ServerlessSubnetGroup.yml)}
    ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
    ServerlessVPCGA: ${file(./resource/ServerlessVPCGA.yml)}

functions:
  list-tasks:
    handler: endpoints.tasks.list.handler
    events:
      - http:
            path: tasks
            method: get
            cors: true
  create-task:
    handler: endpoints.tasks.create.handler
    events:
      - http:
          path: tasks
          method: post
          cors: true
  delete-task:
    handler: endpoints.tasks.delete.handler
    events:
      - http:
          path: tasks/{id}
          method: delete
          cors: true
